package Stack;

import java.util.Stack;

public class StackExercise {

	public static void main(String[] args) {
		// Test cases
        String parentheses1 = "((()))";
        String parentheses2 = "(()())";
        String parentheses3 = "(()";
        String parentheses4 = "())";

        // Check each string
        System.out.println("Parentheses 1: " + isBalanced(parentheses1));
        System.out.println("Parentheses 2: " + isBalanced(parentheses2));
        System.out.println("Parentheses 3: " + isBalanced(parentheses3));
        System.out.println("Parentheses 4: " + isBalanced(parentheses4));
    }

    // Method to check if parentheses are balanced
    public static boolean isBalanced(String parentheses) {
        Stack<Character> stack = new Stack<>();

        for (char ch : parentheses.toCharArray()) {
            if (ch == '(') {
                // Push opening parentheses onto the stack
                stack.push(ch);
            } else if (ch == ')') {
                // Check if the stack is empty or pop the last open parenthesis
                if (stack.isEmpty()) {
                    return false;
                }
                stack.pop();
            }
        }

        // If the stack is empty, all parentheses were matched
        return stack.isEmpty();
    }
}
