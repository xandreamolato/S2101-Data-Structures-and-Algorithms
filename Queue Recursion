package Queue;

import java.util.LinkedList;
import java.util.Queue;

public class QueueRecursion {

    // Recursive method to reverse a queue
    public static void reverseQueue(Queue<Integer> queue) {
        // Base case: If queue is empty, return
        if (queue.isEmpty()) {
            return;
        }

        // Recursive case: Remove front element and reverse the rest
        int front = queue.poll();
        reverseQueue(queue);
        queue.add(front); // Add the front element back at the end
    }

    public static void main(String[] args) {
        Queue<Integer> queue = new LinkedList<>();
        queue.add(1);
        queue.add(2);
        queue.add(3);
        queue.add(4);

        System.out.println("Original Queue: " + queue);
        
        reverseQueue(queue);

        System.out.println("Reversed Queue: " + queue);
    }
}
